<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <!--
    Custom Configuration Sections
  -->
  <configSections>

    <!-- This section contains definitions for the IStorageContainer implementation to be used by the Feature Store service -->
    <section
      name="featureStore.StorageContainer"
      type="Ciroque.Foundations.FeatureStore.Data.StorageContainerConfigurationSection, Ciroque.Foundations.FeatureStore.Data,Version=1.0.0.0,Culture=neutral,PublicKeyToken=77add38493494c0c"/>

    <!-- This section contains the defintions used to drive the log4net logging implementation -->
    <section
      name="log4net"
      type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />

  </configSections>

  <!-- 
    Instruct the service on which IStorageContainer implementation is to be used for this occurence of the service.
    *** This service uses the SqlServer implementation. 
    *** The storageLocation attribute should contain the key of the connection string element in the connectionStrings section to be used.
  -->
  <featureStore.StorageContainer containerType="SqlServer" storageLocation="Ciroque.Foundations.FeatureStore.Database" />

  <!-- The log4net configuration is stored in an external file -->
  <log4net configSource="log4net.config"/>

  <!--
    Database Connection Strings
  -->
  <connectionStrings>
    <add name="Ciroque.Foundations.FeatureStore.Database" connectionString="Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=FeatureStore;Data Source=CIROQUE"/>
  </connectionStrings>

  <!--
    Loggers, sources and listeners, oh my.
  -->
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel.MessageLogging" switchValue="Warning, ActivityTracing">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelMessageLoggingListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
      <source name="System.ServiceModel" switchValue="Warning,ActivityTracing"
        propagateActivity="true">
        <listeners>
          <add type="System.Diagnostics.DefaultTraceListener" name="Default">
            <filter type="" />
          </add>
          <add name="ServiceModelTraceListener">
            <filter type="" />
          </add>
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add initializeData=".\App_messages.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelMessageLoggingListener"
        traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
      <add initializeData=".\App_tracelog.svclog"
        type="System.Diagnostics.XmlWriterTraceListener, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        name="ServiceModelTraceListener"
        traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
    </sharedListeners>
  </system.diagnostics>

  <!--
    Stuff used by WCF to configure the service framework.
  -->
  <system.serviceModel>
    <bindings>
      <netTcpBinding>
        <binding name="FeatureStoreServiceNetTcpBinding" maxBufferSize="1048576"
          maxReceivedMessageSize="1048576">
          <readerQuotas maxArrayLength="1048576" />
        </binding>
      </netTcpBinding>
    </bindings>
    <behaviors>
      <serviceBehaviors>
        <behavior name="FeatureStoreServiceBehavior">
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <diagnostics
        wmiProviderEnabled="true">
      <messageLogging logEntireMessage="true" logKnownPii="true" logMalformedMessages="true"
        logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" />
      <endToEndTracing propagateActivity="true" activityTracing="true"
        messageFlowTracing="true" />
    </diagnostics>
    <services>
      <service behaviorConfiguration="FeatureStoreServiceBehavior"
        name="Ciroque.Foundations.FeatureStore.Service.FeatureStoreService">
        <endpoint address="net.tcp://localhost:32157/FeatureStore" binding="netTcpBinding"
          bindingConfiguration="FeatureStoreServiceNetTcpBinding" name="PrimaryTcpEndpoint"
          contract="Ciroque.Foundations.FeatureStore.Service.IFeatureStoreService" />
      </service>
    </services>
  </system.serviceModel>
</configuration>